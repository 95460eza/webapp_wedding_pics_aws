name: Pipeline to Publish Docker Image to AWS ECR and Zappa deploy on "git push"

on:
  push:
    branches:
      - 'main'
      - 'feature**'

jobs:

#name: Publish Docker Image to AWS ECR
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker Image
        run: |
          # NOTE: CHANGE below "repository-for-docker-images:zappaflaskweddingmedia" with BOTH the ACTUAL AWS ECR repository name that will containt the Docker Image AND the ACTUAL Image name
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/repository-for-docker-images:zappaflaskweddingmedia  -f Dockerfile .
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/repository-for-docker-images:zappaflaskweddingmedia

#name: Build and Deploy Lambda Function
  build-and-deploy:
    needs: publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1


      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          #python-version: '3.12'

         # Zappa requires an ACTIVE virtual environment is CREATED
      - name: Create and activate virtual environment
        run: |
          python -m venv venv

         # Zappa requires ALL the libraries from "requirements.txt" be INSTALLED HERE
      - name: Deploy with Zappa to AWS Lambda 
        run: |
          source venv/bin/activate  # Activate the virtual environment
          pip install --upgrade pip
          pip install flask
          pip install gunicorn
          pip install Werkzeug
          pip install boto3 --upgrade
          pip install zappa
          zappa deploy dev
          #zappa update dev
          #zappa deploy dev && zappa tail dev
        